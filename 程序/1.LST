C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE 1
OBJECT MODULE PLACED IN 1.OBJ
COMPILER INVOKED BY: I:\Install\Keil\C51\BIN\C51.EXE 1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include <intrins.h>
   3          #define uchar unsigned char 
   4          #define uint unsigned int
   5          uchar code table[]={
   6          0x3f,0x06,0x5b,0x4f,
   7          0x66,0x6d,0x7d,0x07,
   8          0x7f,0x6f,0x77,0x7c,
   9          0x39,0x5e,0x79,0x71};
  10          uchar code teble1[]={1,2,3,4,5,6,7,8,9,10,11,12};
  11          sbit dula = P2^0;
  12          sbit wela1 = P2^1;
  13          sbit wela2 = P2^2;
  14          sbit wela3 = P2^3;
  15          sbit wela4 = P2^4; 
  16          sbit wela5 = P2^5;
  17          sbit dsq = P2^6;
  18          sbit cs = P1^3;
  19          sbit as = P1^0;
  20          sbit rw = P1^1;
  21          sbit ds = P1^2;
  22          sbit irq = P1^4;
  23          sbit k1 = P1^5;
  24          sbit k2 = P1^6;
  25          sbit k3 = P1^7;
  26          
  27          char nian, yue, ri, nyue, nri, shi, fen, miao, xq, wen, led;
  28          uint temp,num;
  29          float f_temp;
  30          uchar c_sun,year_sun,month_sun,day_sun;
  31          
  32          void delay(uint z)                         //延时
  33          {
  34   1              uint x,y;
  35   1              
  36   1              for(x=z;x>0;x--)
  37   1                      for(y=110;y>0;y--);
  38   1      }
  39          
  40          void write_ds(uchar add,uchar date)                     //向DS12c887写
  41          {
  42   1              cs=0;
  43   1              as=1;
  44   1              ds=1;
  45   1              rw=1;
  46   1              P0=add;
  47   1              as=0;
  48   1              rw=0;
  49   1              P0=date;
  50   1              rw=1;
  51   1              as=1;
  52   1              cs=1;                           
  53   1      }
  54          
  55          uint read_ds(uchar add)                                   //读DS12C887
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 2   

  56          {
  57   1              uchar date;
  58   1              as=1;
  59   1              ds=1;
  60   1              rw=1;
  61   1              cs=0;
  62   1              P0=add;
  63   1              as=0;
  64   1              ds=0;
  65   1              P0=0xff;
  66   1              date = P0;
  67   1              as=1;
  68   1              ds=1;
  69   1              cs=1;
  70   1              return date;
  71   1      }
  72          
  73          void set_time(uchar n, uchar y, uchar r, uchar x, char s, uchar f, uchar m)                     //设置DS12C887
  74          {
  75   1              write_ds(0,m);
  76   1              write_ds(2,f);
  77   1              write_ds(4,s);
  78   1              write_ds(6,x);
  79   1              write_ds(7,r);
  80   1              write_ds(8,y);
  81   1              write_ds(9,n);
  82   1      }                                
  83          
  84          void display_n(uint n)                          //显示年
  85          {
  86   1              uint a, b, c, d;
  87   1              a = 2;
  88   1              b = 0;
  89   1              c = n/10;
  90   1              d = n%10;
  91   1          dula = 1;
  92   1              P0 = table[a];
  93   1              dula = 0;
  94   1              P0 = 0xff;
  95   1              wela1 = 1;
  96   1              P0 = 0xfe;
  97   1              wela1 = 0;
  98   1      
  99   1              dula = 1;
 100   1              P0 = table[b];
 101   1              dula = 0;
 102   1              P0 = 0xff;
 103   1              wela1 = 1;
 104   1              P0 = 0xfd;
 105   1              wela1 = 0;
 106   1      
 107   1              dula = 1;
 108   1              P0 = table[c];
 109   1              dula = 0;
 110   1              P0 = 0xff;
 111   1              wela1 = 1;
 112   1              P0 = 0xfb;
 113   1              wela1 = 0;
 114   1      
 115   1              dula = 1;
 116   1              P0 = table[d];
 117   1              dula = 0;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 3   

 118   1              P0 = 0xff;
 119   1              wela1 = 1;
 120   1              P0 = 0xf7;
 121   1              wela1 = 0;
 122   1      
 123   1              wela1 = 1;
 124   1              P0 = 0xff;
 125   1              wela1 = 0;
 126   1      }
 127          
 128          void display_yy(uchar y)                                         //显示阳历月
 129          {
 130   1          dula = 1;
 131   1              P0 = table[y/10];
 132   1              dula = 0;
 133   1              P0 = 0xff;
 134   1              wela2 = 1;
 135   1              P0 = 0xfe;
 136   1              wela2 = 0;
 137   1      
 138   1              dula = 1;
 139   1              P0 = table[y%10];
 140   1              dula = 0;
 141   1              P0 = 0xff;
 142   1              wela2 = 1;
 143   1              P0 = 0xfd;
 144   1              wela2 = 0;
 145   1      
 146   1              wela2 = 1;
 147   1              P0 = 0xff;
 148   1              wela2 = 0;
 149   1      }
 150          
 151          void display_yr(uchar r)                                          //显示阳历日
 152          {
 153   1              dula = 1;
 154   1              P0 = table[r/10];
 155   1              dula = 0;
 156   1              P0 = 0xff;
 157   1              wela2 = 1;
 158   1              P0 = 0xef;
 159   1              wela2 = 0;
 160   1      
 161   1              dula = 1;
 162   1              P0 = table[r%10];
 163   1              dula = 0;
 164   1              P0 = 0xff;
 165   1              wela2 = 1;
 166   1              P0 = 0xdf;
 167   1              wela2 = 0;
 168   1      
 169   1              wela2 = 1;
 170   1              P0 = 0xff;
 171   1              wela2 = 0;
 172   1      }
 173          
 174          void display_nyr(uchar y, uchar r)                              //显示阴历月日
 175          {
 176   1              uint a, b, c, d;
 177   1              a = y/10;
 178   1              b = y%10;
 179   1              c = r/10;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 4   

 180   1              d = r%10;
 181   1          dula = 1;
 182   1              P0 = table[a];
 183   1              dula = 0;
 184   1              P0 = 0xff;
 185   1              wela2 = 1;
 186   1              P0 = 0xfb;
 187   1              wela2 = 0;
 188   1      
 189   1              dula = 1;
 190   1              P0 = table[b];
 191   1              dula = 0;
 192   1              P0 = 0xff;
 193   1              wela2 = 1;
 194   1              P0 = 0xf7;
 195   1              wela2 = 0;
 196   1      
 197   1              dula = 1;
 198   1              P0 = table[c];
 199   1              dula = 0;
 200   1              P0 = 0xff;
 201   1              wela2 = 1;
 202   1              P0 = 0xbf;
 203   1              wela2 = 0;
 204   1      
 205   1              dula = 1;
 206   1              P0 = table[d];
 207   1              dula = 0;
 208   1              P0 = 0xff;
 209   1              wela2 = 1;
 210   1              P0 = 0x7f;
 211   1              wela2 = 0;
 212   1      
 213   1              wela2 = 1;
 214   1              P0 = 0xff;
 215   1              wela2 = 0;
 216   1      }
 217          
 218          void display_s(uchar s)                                            //显示时
 219          {       
 220   1          dula = 1;
 221   1              P0 = table[s/10];
 222   1              dula = 0;
 223   1              P0 = 0xff;
 224   1              wela3 = 1;
 225   1              P0 = 0xfe;
 226   1              wela3 = 0;
 227   1      
 228   1              dula = 1;
 229   1              P0 = table[s%10];
 230   1              dula = 0;
 231   1              P0 = 0xff;
 232   1              wela3 = 1;
 233   1              P0 = 0xfd;
 234   1              wela3 = 0;
 235   1      
 236   1              wela3 = 1;
 237   1              P0 = 0xff;
 238   1              wela3 = 0;
 239   1      }
 240          
 241          void display_f(uchar f)                                                  //显示分
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 5   

 242          {
 243   1              dula = 1;
 244   1              P0 = table[f/10];
 245   1              dula = 0;
 246   1              P0 = 0xff;
 247   1              wela3 = 1;
 248   1              P0 = 0xfb;
 249   1              wela3 = 0;
 250   1      
 251   1              dula = 1;
 252   1              P0 = table[f%10];
 253   1              dula = 0;
 254   1              P0 = 0xff;
 255   1              wela3 = 1;
 256   1              P0 = 0xf7;
 257   1              wela3 = 0;
 258   1      
 259   1              wela3 = 1;
 260   1              P0 = 0xff;
 261   1              wela3 = 0;
 262   1      }
 263          
 264          void display_m(uchar m)                                                  //显示秒
 265          {
 266   1          dula = 1;
 267   1              P0 = table[m/10];
 268   1              dula = 0;
 269   1              P0 = 0xff;
 270   1              wela3 = 1;
 271   1              P0 = 0xef;
 272   1              wela3 = 0;
 273   1      
 274   1              dula = 1;
 275   1              P0 = table[m%10];
 276   1              dula = 0;
 277   1              P0 = 0xff;
 278   1              wela3 = 1;
 279   1              P0 = 0xdf;
 280   1              wela3 = 0;
 281   1      
 282   1              wela3 = 1;
 283   1              P0 = 0xff;
 284   1              wela3 = 0;               
 285   1      }
 286           /*
 287          void display_led(uchar l)                                                  //显示生肖灯
 288          {
 289                  uchar code table1[]={ 0x00,
 290                  0xef,0xdf,0xbf,0x7f,
 291                  0xfe,0xfd,0xfb,0xf7,
 292                  0xef,0xdf,0xbf,0x7f,
 293                  };
 294                  if(l < 5)
 295                  {
 296                          P0 = 0xff;
 297                          wela1 = 1;
 298                          P0 = table1[l];
 299                          wela1 = 0;
 300                  }
 301                  else
 302                  {
 303                          P0 = 0xff;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 6   

 304                          wela4 = 1;
 305                          P0 = table1[l];
 306                          wela4 = 0;
 307          
 308                          wela4 = 1;
 309                          P0 = 0xff;
 310                          wela4 = 0;
 311                  }                                       
 312          }                  */
 313          void display_wen(uchar w)                                                //显示温度
 314          {
 315   1              dula = 1;
 316   1              P0 = table[w/10];
 317   1              dula = 0;
 318   1              P0 = 0xff;
 319   1              wela3 = 1;
 320   1              P0 = 0xbf;
 321   1              wela3 = 0;
 322   1      
 323   1              dula = 1;
 324   1              P0 = table[w%10];
 325   1              dula = 0;
 326   1              P0 = 0xff;
 327   1              wela3 = 1;
 328   1              P0 = 0x7f;
 329   1              wela3 = 0;
 330   1      
 331   1              wela3 = 1;
 332   1              P0 = 0xff;
 333   1              wela3 = 0;
 334   1      }
 335          void display_xq(week)                                                    //显示星期
 336          {
 337   1          dula = 1;
 338   1              P0 = table[week];
 339   1              dula = 0;
 340   1              P0 = 0xff;
 341   1              wela5 = 1;
 342   1              P0 = 0xfe;
 343   1              wela5 = 0;
 344   1      
 345   1              wela5 = 1;
 346   1              P0 = 0xff;
 347   1              wela5 = 0;      
 348   1      }
 349          
 350          /*********************************************/
 351          //温度芯片处理
 352          void dsreset(void)
 353          {
 354   1              uint i;
 355   1              dsq = 0;
 356   1              i = 103;
 357   1              while(i>0)i--;
 358   1              dsq = 1;
 359   1              i = 4; 
 360   1              while(i>0) i--;
 361   1      }
 362          
 363          bit tempreadbit(void)
 364          {
 365   1              uint i;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 7   

 366   1              bit dat;
 367   1              dsq = 0;i++;
 368   1              dsq = 1;i++;i++;
 369   1              dat = dsq;
 370   1              i = 8;while(i>0)i--;
 371   1              return (dat);
 372   1      }
 373          
 374          uchar tempread()
 375          {
 376   1              uchar i, j, dat;
 377   1              dat = 0;
 378   1              for(i=1;i<=8;i++)
 379   1              {
 380   2                      j = tempreadbit();
 381   2                      dat = (j<<7)|(dat>>1);
 382   2              }
 383   1              return(dat);
 384   1      }
 385          
 386          void tempwritebyte(uchar dat)
 387          {
 388   1              uint i;
 389   1              uchar j;
 390   1              bit testb;
 391   1              for(j=1;j<=8;j++)
 392   1              {
 393   2                      testb = dat&0x01;
 394   2                      dat = dat>>1;
 395   2                      if(testb)
 396   2                      {
 397   3                              dsq = 0;
 398   3                              i++;i++;
 399   3                              dsq = 1;
 400   3                              i = 8;while(i>0)i--;
 401   3                      }
 402   2                      else
 403   2                      {
 404   3                              dsq = 0;
 405   3                              i = 8;while(i>0) i--;
 406   3                              dsq = 1;
 407   3                              i++;i++;
 408   3                      }
 409   2              }
 410   1      }
 411          
 412          void tempchange(void)
 413          {
 414   1              dsreset();
 415   1              delay(1);
 416   1              tempwritebyte(0xcc);
 417   1              tempwritebyte(0x44);
 418   1      }
 419          
 420          uint get_temp()
 421          {
 422   1              uchar a, b;
 423   1              dsreset();
 424   1              delay(1);
 425   1              tempwritebyte(0xcc);
 426   1              tempwritebyte(0xbe);
 427   1              a = tempread();
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 8   

 428   1              b = tempread();
 429   1              temp = b;
 430   1              temp<<=8;
 431   1              temp = temp|a;
 432   1              f_temp = temp*0.0625;
 433   1              temp = f_temp*10 + 0.5;
 434   1              temp =temp/10/1;
 435   1              return temp;
 436   1      } 
 437          
 438          
 439          void csh()                                       //初始化
 440          {
 441   1              write_ds(0x0a,0x20);
 442   1              write_ds(0x0b,0x26);            
 443   1              P0 = 0xff;      
 444   1              wela1 = wela2 = wela3 = wela4 = wela5 = 0;
 445   1      }
 446          
 447          /****************************************************/
 448          //阳历转农历
 449          code uchar year_code[] = {                                                                       //1901至2099农历数据 ，这个在网上抄的，该很多次都失败，只能保留1901到1
             -999的数据
 450                                    0x04,0xAe,0x53,    //1901 0
 451                                    0x0A,0x57,0x48,    //1902 3
 452                                    0x55,0x26,0xBd,    //1903 6
 453                                    0x0d,0x26,0x50,    //1904 9
 454                                    0x0d,0x95,0x44,    //1905 12
 455                                    0x46,0xAA,0xB9,    //1906 15
 456                                    0x05,0x6A,0x4d,    //1907 18
 457                                    0x09,0xAd,0x42,    //1908 21
 458                                    0x24,0xAe,0xB6,    //1909
 459                                    0x04,0xAe,0x4A,    //1910
 460                                    0x6A,0x4d,0xBe,    //1911
 461                                    0x0A,0x4d,0x52,    //1912
 462                                    0x0d,0x25,0x46,    //1913
 463                                    0x5d,0x52,0xBA,    //1914
 464                                    0x0B,0x54,0x4e,    //1915
 465                                    0x0d,0x6A,0x43,    //1916
 466                                    0x29,0x6d,0x37,    //1917
 467                                    0x09,0x5B,0x4B,    //1918
 468                                    0x74,0x9B,0xC1,    //1919
 469                                    0x04,0x97,0x54,    //1920
 470                                    0x0A,0x4B,0x48,    //1921
 471                                    0x5B,0x25,0xBC,    //1922
 472                                    0x06,0xA5,0x50,    //1923
 473                                    0x06,0xd4,0x45,    //1924
 474                                    0x4A,0xdA,0xB8,    //1925
 475                                    0x02,0xB6,0x4d,    //1926
 476                                    0x09,0x57,0x42,    //1927
 477                                    0x24,0x97,0xB7,    //1928
 478                                    0x04,0x97,0x4A,    //1929
 479                                    0x66,0x4B,0x3e,    //1930
 480                                    0x0d,0x4A,0x51,    //1931
 481                                    0x0e,0xA5,0x46,    //1932
 482                                    0x56,0xd4,0xBA,    //1933
 483                                    0x05,0xAd,0x4e,    //1934
 484                                    0x02,0xB6,0x44,    //1935
 485                                    0x39,0x37,0x38,    //1936
 486                                    0x09,0x2e,0x4B,    //1937
 487                                    0x7C,0x96,0xBf,    //1938
 488                                    0x0C,0x95,0x53,    //1939
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 9   

 489                                    0x0d,0x4A,0x48,    //1940
 490                                    0x6d,0xA5,0x3B,    //1941
 491                                    0x0B,0x55,0x4f,    //1942
 492                                    0x05,0x6A,0x45,    //1943
 493                                    0x4A,0xAd,0xB9,    //1944
 494                                    0x02,0x5d,0x4d,    //1945
 495                                    0x09,0x2d,0x42,    //1946
 496                                    0x2C,0x95,0xB6,    //1947
 497                                    0x0A,0x95,0x4A,    //1948
 498                                    0x7B,0x4A,0xBd,    //1949
 499                                    0x06,0xCA,0x51,    //1950
 500                                    0x0B,0x55,0x46,    //1951
 501                                    0x55,0x5A,0xBB,    //1952
 502                                    0x04,0xdA,0x4e,    //1953
 503                                    0x0A,0x5B,0x43,    //1954
 504                                    0x35,0x2B,0xB8,    //1955
 505                                    0x05,0x2B,0x4C,    //1956
 506                                    0x8A,0x95,0x3f,    //1957
 507                                    0x0e,0x95,0x52,    //1958
 508                                    0x06,0xAA,0x48,    //1959
 509                                    0x7A,0xd5,0x3C,    //1960
 510                                    0x0A,0xB5,0x4f,    //1961
 511                                    0x04,0xB6,0x45,    //1962
 512                                    0x4A,0x57,0x39,    //1963
 513                                    0x0A,0x57,0x4d,    //1964
 514                                    0x05,0x26,0x42,    //1965
 515                                    0x3e,0x93,0x35,    //1966
 516                                    0x0d,0x95,0x49,    //1967
 517                                    0x75,0xAA,0xBe,    //1968
 518                                    0x05,0x6A,0x51,    //1969
 519                                    0x09,0x6d,0x46,    //1970
 520                                    0x54,0xAe,0xBB,    //1971
 521                                    0x04,0xAd,0x4f,    //1972
 522                                    0x0A,0x4d,0x43,    //1973
 523                                    0x4d,0x26,0xB7,    //1974
 524                                    0x0d,0x25,0x4B,    //1975
 525                                    0x8d,0x52,0xBf,    //1976
 526                                    0x0B,0x54,0x52,    //1977
 527                                    0x0B,0x6A,0x47,    //1978
 528                                    0x69,0x6d,0x3C,    //1979
 529                                    0x09,0x5B,0x50,    //1980
 530                                    0x04,0x9B,0x45,    //1981
 531                                    0x4A,0x4B,0xB9,    //1982
 532                                    0x0A,0x4B,0x4d,    //1983
 533                                    0xAB,0x25,0xC2,    //1984
 534                                    0x06,0xA5,0x54,    //1985
 535                                    0x06,0xd4,0x49,    //1986
 536                                    0x6A,0xdA,0x3d,    //1987
 537                                    0x0A,0xB6,0x51,    //1988
 538                                    0x09,0x37,0x46,    //1989
 539                                    0x54,0x97,0xBB,    //1990
 540                                    0x04,0x97,0x4f,    //1991
 541                                    0x06,0x4B,0x44,    //1992
 542                                    0x36,0xA5,0x37,    //1993
 543                                    0x0e,0xA5,0x4A,    //1994
 544                                    0x86,0xB2,0xBf,    //1995
 545                                    0x05,0xAC,0x53,    //1996
 546                                    0x0A,0xB6,0x47,    //1997
 547                                    0x59,0x36,0xBC,    //1998
 548                                    0x09,0x2e,0x50,    //1999 294
 549                                    0x0C,0x96,0x45,    //2000 297
 550                                    0x4d,0x4A,0xB8,    //2001
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 10  

 551                                    0x0d,0x4A,0x4C,    //2002
 552                                    0x0d,0xA5,0x41,    //2003
 553                                    0x25,0xAA,0xB6,    //2004
 554                                    0x05,0x6A,0x49,    //2005
 555                                    0x7A,0xAd,0xBd,    //2006
 556                                    0x02,0x5d,0x52,    //2007
 557                                    0x09,0x2d,0x47,    //2008
 558                                    0x5C,0x95,0xBA,    //2009
 559                                    0x0A,0x95,0x4e,    //2010
 560                                    0x0B,0x4A,0x43,    //2011
 561                                    0x4B,0x55,0x37,    //2012
 562                                    0x0A,0xd5,0x4A,    //2013
 563                                    0x95,0x5A,0xBf,    //2014
 564                                    0x04,0xBA,0x53,    //2015
 565                                    0x0A,0x5B,0x48,    //2016
 566                                    0x65,0x2B,0xBC,    //2017
 567                                    0x05,0x2B,0x50,    //2018
 568                                    0x0A,0x93,0x45,    //2019
 569                                    0x47,0x4A,0xB9,    //2020
 570                                    0x06,0xAA,0x4C,    //2021
 571                                    0x0A,0xd5,0x41,    //2022
 572                                    0x24,0xdA,0xB6,    //2023
 573                                    0x04,0xB6,0x4A,    //2024
 574                                    0x69,0x57,0x3d,    //2025
 575                                    0x0A,0x4e,0x51,    //2026
 576                                    0x0d,0x26,0x46,    //2027
 577                                    0x5e,0x93,0x3A,    //2028
 578                                    0x0d,0x53,0x4d,    //2029
 579                                    0x05,0xAA,0x43,    //2030
 580                                    0x36,0xB5,0x37,    //2031
 581                                    0x09,0x6d,0x4B,    //2032
 582                                    0xB4,0xAe,0xBf,    //2033
 583                                    0x04,0xAd,0x53,    //2034
 584                                    0x0A,0x4d,0x48,    //2035
 585                                    0x6d,0x25,0xBC,    //2036
 586                                    0x0d,0x25,0x4f,    //2037
 587                                    0x0d,0x52,0x44,    //2038
 588                                    0x5d,0xAA,0x38,    //2039
 589                                    0x0B,0x5A,0x4C,    //2040
 590                                    0x05,0x6d,0x41,    //2041
 591                                    0x24,0xAd,0xB6,    //2042
 592                                    0x04,0x9B,0x4A,    //2043
 593                                    0x7A,0x4B,0xBe,    //2044
 594                                    0x0A,0x4B,0x51,    //2045
 595                                    0x0A,0xA5,0x46,    //2046
 596                                    0x5B,0x52,0xBA,    //2047
 597                                    0x06,0xd2,0x4e,    //2048
 598                                    0x0A,0xdA,0x42,    //2049
 599                                    0x35,0x5B,0x37,    //2050
 600                                    0x09,0x37,0x4B,    //2051
 601                                    0x84,0x97,0xC1,    //2052
 602                                    0x04,0x97,0x53,    //2053
 603                                    0x06,0x4B,0x48,    //2054
 604                                    0x66,0xA5,0x3C,    //2055
 605                                    0x0e,0xA5,0x4f,    //2056
 606                                    0x06,0xB2,0x44,    //2057
 607                                    0x4A,0xB6,0x38,    //2058
 608                                    0x0A,0xAe,0x4C,    //2059
 609                                    0x09,0x2e,0x42,    //2060
 610                                    0x3C,0x97,0x35,    //2061
 611                                    0x0C,0x96,0x49,    //2062
 612                                    0x7d,0x4A,0xBd,    //2063
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 11  

 613                                    0x0d,0x4A,0x51,    //2064
 614                                    0x0d,0xA5,0x45,    //2065
 615                                    0x55,0xAA,0xBA,    //2066
 616                                    0x05,0x6A,0x4e,    //2067
 617                                    0x0A,0x6d,0x43,    //2068
 618                                    0x45,0x2e,0xB7,    //2069
 619                                    0x05,0x2d,0x4B,    //2070
 620                                    0x8A,0x95,0xBf,    //2071
 621                                    0x0A,0x95,0x53,    //2072
 622                                    0x0B,0x4A,0x47,    //2073
 623                                    0x6B,0x55,0x3B,    //2074
 624                                    0x0A,0xd5,0x4f,    //2075
 625                                    0x05,0x5A,0x45,    //2076
 626                                    0x4A,0x5d,0x38,    //2077
 627                                    0x0A,0x5B,0x4C,    //2078
 628                                    0x05,0x2B,0x42,    //2079
 629                                    0x3A,0x93,0xB6,    //2080
 630                                    0x06,0x93,0x49,    //2081
 631                                    0x77,0x29,0xBd,    //2082
 632                                    0x06,0xAA,0x51,    //2083
 633                                    0x0A,0xd5,0x46,    //2084
 634                                    0x54,0xdA,0xBA,    //2085
 635                                    0x04,0xB6,0x4e,    //2086
 636                                    0x0A,0x57,0x43,    //2087
 637                                    0x45,0x27,0x38,    //2088
 638                                    0x0d,0x26,0x4A,    //2089
 639                                    0x8e,0x93,0x3e,    //2090
 640                                    0x0d,0x52,0x52,    //2091
 641                                    0x0d,0xAA,0x47,    //2092
 642                                    0x66,0xB5,0x3B,    //2093
 643                                    0x05,0x6d,0x4f,    //2094
 644                                    0x04,0xAe,0x45,    //2095
 645                                    0x4A,0x4e,0xB9,    //2096
 646                                    0x0A,0x4d,0x4C,    //2097
 647                                    0x0d,0x15,0x41,    //2098
 648                                    0x2d,0x92,0xB5,    //2099
 649          };
 650          
 651          code uchar day_code1[9]={0x0,0x1f,0x3b,0x5a,0x78,0x97,0xb5,0xd4,0xf3};
 652          code uint day_code2[3]={0x111,0x130,0x14e};
 653          
 654          bit c_moon;
 655          data uchar year_moon,month_moon,day_moon;
 656          
 657          bit get_moon_day(uchar month_p,uint table_addr)
 658          {
 659   1              uchar temp;
 660   1              switch (month_p)
 661   1              {
 662   2              case 1:{temp=year_code[table_addr]&0x08;
 663   3                     if (temp==0)return(0);else return(1);}
 664   2              case 2:{temp=year_code[table_addr]&0x04;
 665   3                     if (temp==0)return(0);else return(1);}
 666   2              case 3:{temp=year_code[table_addr]&0x02;
 667   3                     if (temp==0)return(0);else return(1);}
 668   2              case 4:{temp=year_code[table_addr]&0x01;
 669   3                     if (temp==0)return(0);else return(1);}
 670   2              case 5:{temp=year_code[table_addr+1]&0x80;
 671   3                     if (temp==0) return(0);else return(1);}
 672   2              case 6:{temp=year_code[table_addr+1]&0x40;
 673   3                     if (temp==0)return(0);else return(1);}
 674   2              case 7:{temp=year_code[table_addr+1]&0x20;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 12  

 675   3                     if (temp==0)return(0);else return(1);}
 676   2              case 8:{temp=year_code[table_addr+1]&0x10;
 677   3                     if (temp==0)return(0);else return(1);}
 678   2              case 9:{temp=year_code[table_addr+1]&0x08;
 679   3                     if (temp==0)return(0);else return(1);}
 680   2              case 10:{temp=year_code[table_addr+1]&0x04;
 681   3                     if (temp==0)return(0);else return(1);}
 682   2              case 11:{temp=year_code[table_addr+1]&0x02;
 683   3                     if (temp==0)return(0);else return(1);}
 684   2              case 12:{temp=year_code[table_addr+1]&0x01;
 685   3                     if (temp==0)return(0);else return(1);}
 686   2              case 13:{temp=year_code[table_addr+2]&0x80;
 687   3                     if (temp==0)return(0);else return(1);}
 688   2            }
 689   1      }
 690          
 691          void Conversion(bit c,uchar year,uchar month,uchar day)
 692          {                         //c=0 为21世纪,c=1 为19世纪
 693   1          uchar temp1,temp2,temp3,month_p;
 694   1          uint temp4,table_addr;
 695   1          bit flag2,flag_y;
 696   1              temp1=year/16;  
 697   1          temp2=year%16;
 698   1          temp1=month/16;
 699   1          temp2=month%16;
 700   1          temp1=day/16;
 701   1          temp2=day%16;
 702   1      
 703   1          if(c==0)
 704   1              {                   
 705   2                      table_addr=(year+0x64-1)*0x3;
 706   2          }
 707   1          else
 708   1              {
 709   2              table_addr=(year-1)*0x3;
 710   2          }
 711   1          temp1=year_code[table_addr+2]&0x60; 
 712   1          temp1=_cror_(temp1,5);
 713   1          temp2=year_code[table_addr+2]&0x1f; 
 714   1          if(temp1==0x1)
 715   1              {  
 716   2              temp3=temp2-1;  
 717   2          }  
 718   1          else
 719   1              {
 720   2              temp3=temp2+0x1f-1;        
 721   2          }
 722   1          if (month<10)
 723   1              { 
 724   2              temp4=day_code1[month-1]+day-1;
 725   2          }
 726   1          else
 727   1              {
 728   2              temp4=day_code2[month-10]+day-1;
 729   2          }
 730   1          if ((month>0x2)&&(year%0x4==0))     
 731   1              {  
 732   2              temp4+=1;
 733   2          }
 734   1          if (temp4>=temp3)
 735   1              { 
 736   2              temp4-=temp3;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 13  

 737   2              month=0x1;
 738   2              month_p=0x1; 
 739   2              flag2=get_moon_day(month_p,table_addr); 
 740   2              flag_y=0;
 741   2              if(flag2==0)temp1=0x1d; 
 742   2              else temp1=0x1e; 
 743   2              temp2=year_code[table_addr]&0xf0;
 744   2              temp2=_cror_(temp2,4);  
 745   2              while(temp4>=temp1)
 746   2                      {
 747   3                      temp4-=temp1;
 748   3                      month_p+=1;
 749   3                      if(month==temp2)
 750   3                              {
 751   4                                  flag_y=~flag_y;
 752   4                                  if(flag_y==0)
 753   4                                  month+=1;
 754   4                  }
 755   3                  else 
 756   3                                      month+=1;
 757   3                  flag2=get_moon_day(month_p,table_addr);
 758   3                  if(flag2==0)
 759   3                                      temp1=0x1d;
 760   3                  else 
 761   3                                      temp1=0x1e;
 762   3              }
 763   2              day=temp4+1;
 764   2          }
 765   1          else
 766   1              { 
 767   2              temp3-=temp4;
 768   2              if (year==0x0)
 769   2                      {
 770   3                              year=0x63;c=1;
 771   3                      }
 772   2              else 
 773   2                              year-=1;
 774   2              table_addr-=0x3;
 775   2              month=0xc;
 776   2              temp2=year_code[table_addr]&0xf0;
 777   2              temp2=_cror_(temp2,4);
 778   2              if (temp2==0)
 779   2                              month_p=0xc; 
 780   2              else 
 781   2                              month_p=0xd;
 782   2              flag_y=0;
 783   2              flag2=get_moon_day(month_p,table_addr);
 784   2              if(flag2==0)
 785   2                              temp1=0x1d;
 786   2              else 
 787   2                              temp1=0x1e;
 788   2              while(temp3>temp1)
 789   2                      {
 790   3                  temp3-=temp1;
 791   3                  month_p-=1;
 792   3                  if(flag_y==0)
 793   3                                      month-=1;
 794   3                  if(month==temp2)
 795   3                                      flag_y=~flag_y;
 796   3                  flag2=get_moon_day(month_p,table_addr);
 797   3                  if(flag2==0)
 798   3                                      temp1=0x1d;
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 14  

 799   3                  else temp1=0x1e;
 800   3               }
 801   2               day=temp1-temp3+1;
 802   2          }
 803   1          c_moon=c;                 //运算结束后,把数据转换为十进制数据
 804   1          temp1=year/10;
 805   1          temp1=_crol_(temp1,4);
 806   1          temp2=year%10;
 807   1          year_moon=temp1|temp2;
 808   1              month_moon=month;
 809   1              day_moon= day;
 810   1      }
 811           /*
 812          //阳历年转化为生肖数字，模仿农历转换的
 813          uchar code table2[]={7,1,6,11,4,10,3,8,1,7,12,5,10,4,9,2,7,1,6,11,4,10,3,8,1,7,12,5,10,4,9,2,7,1,6,11,4,10
             -,3,8,1,7,12,5,10,4,9,2,7,1,6,11,4,10,3,8,1,7,12,5,10,4,9,2,7,1,6,11,4,10,3,8,1,7,12,5,10,4,9,2,7,1,6,11,4,10,3,8,1,7,12,
             -5,10,4,9,2,7,1,6,11}  ;           //2000-2099 
 814          uint code table3[]={0,31,59,90,120,151,181,212,243,273,304,334 };
 815          uchar shengxiao(uchar year,uchar month,uchar day )
 816          {
 817                  uchar a;
 818                  uint b, d ;
 819                  a =  table2[year];
 820                  b = table3[month-1];
 821                  d = b + day - 1;
 822                  if ((month>2)&&(year%4==0))
 823                          d++;
 824                  d = d + a;
 825                  d = d %12;
 826                  if(d==0)
 827                          d = 12; 
 828                  return d;
 829          } */
 830           
 831          void key()                              //按键扫描
 832          {
 833   1              uchar bb = 0;
 834   1              if(k1==0)
 835   1              {
 836   2                      delay(500);
 837   2                      if(k1==0)
 838   2                      {
 839   3                              bb = 1;
 840   3                      }
 841   2                      while(!k1);
 842   2                      delay(5);
 843   2                      while(!k1);
 844   2              }
 845   1              while(bb)
 846   1              {
 847   2                      if(k1==0)
 848   2                      {
 849   3                      delay(5);
 850   3                      if(k1==0)
 851   3                      {
 852   4                              bb++;
 853   4                      }
 854   3                      while(!k1);
 855   3                      delay(5);
 856   3                      while(!k1);
 857   3                      }
 858   2      
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 15  

 859   2                      if(bb==1)
 860   2                      {
 861   3                              display_n(nian);
 862   3                              if(k2==0)
 863   3                              {
 864   4                                      delay(5);
 865   4                                      if(k2==0)
 866   4                                      {
 867   5                                              nian++;
 868   5                                              if(nian>99)
 869   5                                                      nian = 0;
 870   5                                      }
 871   4                                      while(!k2);
 872   4                                      delay(5);
 873   4                                      while(!k2);
 874   4                              }
 875   3      
 876   3                              if(k3==0)
 877   3                              {
 878   4                                      delay(5);
 879   4                                      if(k3==0)
 880   4                                      {
 881   5                                              nian--;
 882   5                                              if(nian<0)
 883   5                                                      nian = 99;
 884   5                                      }
 885   4                                      while(!k3);
 886   4                                      delay(5);
 887   4                                      while(!k3);
 888   4                              }
 889   3                      }
 890   2      
 891   2                      if(bb==2)
 892   2                      {
 893   3                              display_yy(yue);
 894   3                              if(k2==0)
 895   3                              {
 896   4                                      delay(5);
 897   4                                      if(k2==0)
 898   4                                      {
 899   5                                              yue++;
 900   5                                              if(yue>12)
 901   5                                                      yue = 1;
 902   5                                      }
 903   4                                      while(!k2);
 904   4                                      delay(5);
 905   4                                      while(!k2);
 906   4                              }
 907   3      
 908   3                              if(k3==0)
 909   3                              {
 910   4                                      delay(5);
 911   4                                      if(k3==0)
 912   4                                      {
 913   5                                              yue--;
 914   5                                              if(yue<1)
 915   5                                                      yue = 12;
 916   5                                      }
 917   4                                      while(!k3);
 918   4                                      delay(5);
 919   4                                      while(!k3);
 920   4                              }
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 16  

 921   3                      }
 922   2      
 923   2                      if(bb==3)
 924   2                      {
 925   3                              display_yr(ri);
 926   3                              if(k2==0)
 927   3                              {
 928   4                                      delay(5);
 929   4                                      if(k2==0)
 930   4                                      {
 931   5                                              ri++;
 932   5                                              if(ri>31)
 933   5                                                      ri = 1;
 934   5                                      }
 935   4                                      while(!k2);
 936   4                                      delay(5);
 937   4                                      while(!k2);
 938   4                              }
 939   3      
 940   3                              if(k3==0)
 941   3                              {
 942   4                                      delay(5);
 943   4                                      if(k3==0)
 944   4                                      {
 945   5                                              ri--;
 946   5                                              if(ri<1)
 947   5                                                      ri = 31;
 948   5                                      }
 949   4                                      while(!k3);
 950   4                                      delay(5);
 951   4                                      while(!k3);
 952   4                              }
 953   3                      }
 954   2      
 955   2                      if(bb==4)
 956   2                      {
 957   3                              display_xq(xq);
 958   3                              if(k2==0)
 959   3                              {
 960   4                                      delay(5);
 961   4                                      if(k2==0)
 962   4                                      {
 963   5                                              xq++;
 964   5                                              if(xq>7)
 965   5                                                      xq = 1;
 966   5                                      }
 967   4                                      while(!k2);
 968   4                                      delay(5);
 969   4                                      while(!k2);
 970   4                              }
 971   3      
 972   3                              if(k3==0)
 973   3                              {
 974   4                                      delay(5);
 975   4                                      if(k3==0)
 976   4                                      {
 977   5                                              xq--;
 978   5                                              if(xq<1)
 979   5                                                      xq = 7;
 980   5                                      }
 981   4                                      while(!k3);
 982   4                                      delay(5);
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 17  

 983   4                                      while(!k3);
 984   4                              }
 985   3                      }
 986   2                      if(bb==5)
 987   2                      {
 988   3                              display_s(shi);
 989   3                              if(k2==0)
 990   3                              {
 991   4                                      delay(5);
 992   4                                      if(k2==0)
 993   4                                      {
 994   5                                              shi++;
 995   5                                              if(shi>23)
 996   5                                                      shi = 0;
 997   5                                      }
 998   4                                      while(!k2);
 999   4                                      delay(5);
1000   4                                      while(!k2);
1001   4                              }
1002   3      
1003   3                              if(k3==0)
1004   3                              {
1005   4                                      delay(5);
1006   4                                      if(k3==0)
1007   4                                      {
1008   5                                              shi--;
1009   5                                              if(shi<0)
1010   5                                                      shi = 23;
1011   5                                      }
1012   4                                      while(!k3);
1013   4                                      delay(5);
1014   4                                      while(!k3);
1015   4                              }
1016   3                      }
1017   2      
1018   2                      if(bb==6)
1019   2                      {
1020   3                              display_f(fen);
1021   3                              if(k2==0)
1022   3                              {
1023   4                                      delay(5);
1024   4                                      if(k2==0)
1025   4                                      {
1026   5                                              fen++;
1027   5                                              if(fen>59)
1028   5                                                      fen = 0;
1029   5                                      }
1030   4                                      while(!k2);
1031   4                                      delay(5);
1032   4                                      while(!k2);
1033   4                              }
1034   3      
1035   3                              if(k3==0)
1036   3                              {
1037   4                                      delay(5);
1038   4                                      if(k3==0)
1039   4                                      {
1040   5                                              fen--;
1041   5                                              if(fen<0)
1042   5                                                      fen = 59;
1043   5                                      }
1044   4                                      while(!k3);
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 18  

1045   4                                      delay(5);
1046   4                                      while(!k3);
1047   4                              }
1048   3                      }
1049   2      
1050   2                      if(bb==7)
1051   2                      {
1052   3                              display_m(miao);
1053   3                              if(k2==0)
1054   3                              {
1055   4                                      delay(5);
1056   4                                      if(k2==0)
1057   4                                      {
1058   5                                              miao++;
1059   5                                              if(miao>59)
1060   5                                                      miao = 0;
1061   5                                      }
1062   4                                      while(!k2);
1063   4                                      delay(5);
1064   4                                      while(!k2);
1065   4                              }
1066   3      
1067   3                              if(k3==0)
1068   3                              {
1069   4                                      delay(5);
1070   4                                      if(k3==0)
1071   4                                      {
1072   5                                              miao--;
1073   5                                              if(miao<0)
1074   5                                                      miao = 59;
1075   5                                      }
1076   4                                      while(!k3);
1077   4                                      delay(5);
1078   4                                      while(!k3);
1079   4                              }
1080   3                      }
1081   2      
1082   2                      if(bb==8)
1083   2                      {
1084   3                              set_time(nian, yue, ri, xq, shi, fen, miao) ;
1085   3                              display_n(nian);                            
1086   3                              display_yy(yue);
1087   3                              display_yr(ri);
1088   3                              display_xq(xq); 
1089   3                              display_s(shi);
1090   3                              display_f(fen);
1091   3                              display_m(miao);
1092   3                      }
1093   2              }
1094   1      
1095   1      }                          
1096          
1097          
1098          void main()
1099          {
1100   1              csh();
1101   1              while(1)
1102   1              {
1103   2                      tempchange();
1104   2                      display_wen(get_temp());
1105   2                      nian = read_ds(9);
1106   2                      yue = read_ds(8);
C51 COMPILER V8.02   1                                                                     01/20/2016 18:06:55 PAGE 19  

1107   2                      ri = read_ds(7);
1108   2                      xq = read_ds(6);
1109   2                      shi = read_ds(4);
1110   2                      fen = read_ds(2);
1111   2                      miao = read_ds(0);
1112   2                      c_sun=0;
1113   2                  year_sun=nian;
1114   2                  month_sun=yue;
1115   2                  day_sun=ri;
1116   2                  Conversion(c_sun,year_sun,month_sun,day_sun);
1117   2      //              led = shengxiao(year_sun,month_sun,day_sun);
1118   2                      display_n(nian);                            
1119   2                      display_yy(yue);
1120   2                      display_yr(ri);
1121   2                      display_xq(xq); 
1122   2                      display_nyr(month_moon,day_moon);
1123   2                      display_s(shi);
1124   2                      display_f(fen);
1125   2                      display_m(miao);   
1126   2      //              display_led(led); 
1127   2                      key();
1128   2              }
1129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2620    ----
   CONSTANT SIZE    =    640    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
